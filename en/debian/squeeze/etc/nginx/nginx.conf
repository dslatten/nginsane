# Notes:
#   To restart nginx: /etc/init.d/nginx restart

################################################################################
#                                 MAIN CONTEXT                                 #
################################################################################
#                                                                              #
#  Directives that are defined here will be applied to nginx at a global       #
#  level. The main context can also define child context blocks. For better    #
#  organization, nginsane keeps these child block directives in separate       #
#  configuration files. The files are imported with the "include" directives   #
#  below. Many directives are valid in more than one context. If a             #
#  directive is defined at multiple levels, the child context definition       #
#  will override the parent context definition. To help you understand the     #
#  nginx configuration hierarchy, nginsane uses a similar architecture for     #
#  its directory structure.                                                    #
#                                                                              #
################################################################################

# EVENTS configuration:
include  events/events.conf;

# HTTP configuration:
include  http/http.conf;

################################################################################

# USER
# syntax:   user  %user  [%group];
# default:  user  nobody  nobody;
# context:  main
# notes:
#   Defines user and group credentials used by worker processes. If group is omitted, a group whose name equals that of user is used.
#
user  nginx;

# WORKER_PROCESSES
# syntax:   worker_processes  %number;
# default:  worker_processes  1;
# context:  main
# notes:
#   Defines the number of worker processes.
#   The optimal value depends on many factors including (but not limited to) the number of CPU cores, the number of hard disk drives that store data, and load pattern.
#   As a rule of thumb, you can set it to the number of available CPU cores.
#
worker_processes  4;

# ERROR_LOG
# syntax:   error_log  (%file|stderr)  [info|notice|warn|error|crit|alert|emerg];
# default:  error_log  logs/error.log  error;
# context:  main, http, server, location
# notes:
#   The first parameter defines a file that will store the log. The special value stderr selects the standard error file.
#   The second parameter determines the level of logging. Log levels above are listed in the order of increasing severity. Setting a certain log level will cause all messages of the specified and more severe log levels to be logged. For example, the default level error will cause error, crit, alert, and emerg messages to be logged. If this parameter is omitted then error is used.
#
error_log  /var/log/nginx/error.log warn;

# PID
# syntax:   pid  %file;
# default:  pid  nginx.pid;
# context:  main
# notes:
#   Defines a file that will store the process ID of the main process.
#
pid  /var/run/nginx.pid;
